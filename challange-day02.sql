set search_path to oe,hr;

select * from oe.customers;


/* Task 1*/
--untuk task create table jika ada requirements tambahan untuk constaint tiap kolom dapat ditambahkan
--misal dalam tabel bank, bank_name bisa ditambahkan not null
--dalam tabel users, untuk user_name, user_email dan password dapat ditambahkan not null
--dan untuk kolom created_on dapat diberikan nilai default now() atau current_timestamp
-- tabel bank
create table oe.bank(
	bank_code varchar(4) primary key,
	bank_name varchar(55)
)
select * from oe.bank;

alter table oe.orders
add column bank_code varchar(4);

alter table oe.orders
add constraint bank_code_fk Foreign Key (bank_code) REFERENCES
oe.bank(bank_code);

--Table users
create table oe.users(
	user_id integer primary key,
	user_name varchar(15),
	user_email varchar(80) unique,
	user_password varchar(125),
	user_handphone varchar(15) unique,
	created_on timestamp  
)
select * from oe.users;

select * from oe.orders;
alter table oe.orders
add column user_id int

alter table oe.orders
add constraint user_id_fk foreign key (user_id) references oe.users(user_id);

--Table carts
create table oe.carts(
	cart_id smallint primary key,
	created_on timestamp,
	user_id integer unique,
	foreign key (user_id) references oe.users (user_id) --satu cart untuk satu user
)
select * from oe.carts

--Table cart_items
create table oe.cart_items(
	cart_item_id smallint primary key,
	quantity smallint,
	created_on timestamp,
	product_id int unique,
	cart_id int,
	foreign key (product_id) references oe.products (product_id),
	foreign key (cart_id) references oe.carts (cart_id)
)

--Menambahkan kolom-kolom baru di table orders
alter table oe.orders
add column total_discount decimal(5,2),
add column total_amount decimal(8,2),
add column payment_type varchar(15),
add column card_no varchar(25),
add column transac_no varchar (25),
add column transac_date timestamp,
add column ref_no varchar(25)

select * from oe.orders;

/* Task 2 */
select * from oe.orders;
select * from hr.locations;
select * from oe.location_x;

--Buat relasi antara hr.locations dan table oe.orders
alter table oe.orders
add column location_id integer;

alter table oe.orders
add constraint order_hrlocation_fk Foreign Key (location_id) REFERENCES
hr.locations(location_id);

--update kolom location_id di table oe.orders.
--cara 1: coba dari table hr.location
update oe.orders as odr
set location_id = (select location_id from hr.locations hloc
where hloc.street_address=odr.ship_address and hloc.postal_code=odr.ship_postal_code
and hloc.city=odr.ship_city and hloc.state_province=odr.ship_region 
--and hloc.country_name=odr.country
) where odr.location_id is null


--cara 2: dari tabel oe.location_x
update oe.orders as odr
set location_id = (select location_id from oe.location_x loc
where loc.street_address=odr.ship_address and loc.postal_code=odr.ship_postal_code
and loc.city=odr.ship_city and loc.state_province=odr.ship_region and
loc.country_name=odr.ship_country
) where odr.location_id is null


/* Task 3 */
select * from oe.employees;
select * from hr.employees;
select * from oe.orders;
select * from hr.jobs;

--Cek constraint not null pada table hr.employees
select 
    column_name
from information_schema.columns
where 
    table_schema = 'hr'
    and table_name = 'employees'
    and is_nullable = 'NO';

--masukkan data employee dari schema oe.employees ke schema hr.employees
insert into hr.employees
select employee_id AS employee_id, 
	first_name, 
	last_name, 
	lower(first_name||  '.'  ||last_name || '@codeid.com') as email, --email, not null
	null as phone_number,
	hire_date, 	
	j.job_id as job_id, --job_id, not null, diambil dari tabel job_id secara acak
	0.00 as salary --salary, not null
	--manager_id,
	--department_id
from oe.employees
join (select job_id from hr.jobs order by random() limit 1)j on true;

select * from hr.employees

--Buat relasi antara table hr.employees dengan table oe.orders (menggunakan employee_id)
alter table oe.orders
add constraint employee_id_hr foreign key (employee_id) references hr.employees (employee_id)

/* Task 4 */
select * from oe.customers;
select * from oe.users;
--create table, sudah di task 1
--pindahkan data dari table oe.customers ke table oe.users

--karena kolom user_id sudah dibuat dalam integer,
--untuk menjadikannya bertindak seperti serial, maka digunakan sequence
create sequence oe.users_user_id_seq;

alter table oe.users
alter column user_id set default nextval('oe.users_user_id_seq');

--metode lainnya bisa meng-inisiasi sebagai kolom identity
--alter table oe.users
--alter column user_id add generated by default as identity;

--memperbaiki constraint kolom created_on karena sebelumnya belum ditambahkan nilai default
alter table oe.users
alter column created_on set default now();

--berikut juga untuk kolom lainnya
alter table oe.carts
alter column created_on set default now();

alter table oe.cart_items
alter column created_on set default now();

--menambahkan extension pgrcypto untuk generate password berdasarkan (customer_id)
create extension if not exists pgcrypto;

--menyesuaikan nilai varchar dari tabel oe.users agar sesuai tabel oe.customers
--karena untuk phone dan contact_name dalam tabel oe.customers ialah varchar(30) dan (24)
alter table oe.users
alter column user_name type varchar(30);

alter table oe.users
alter column user_handphone type varchar(24);

--cara lain bisa mengambil hanya 15 karakter menggunakan metode substring, 
--tetapi khawatir no. telp terpotong 
-- untuk email bisa di generate dari name
insert into oe.users (user_name, user_email, user_password,user_handphone) 
select 
	contact_name as user_name, 
	lower(first_name||'.' ||last_name||'@codeid.com') as email,
	crypt(lower(oc.customer_id), gen_salt('bf', 12)),
	phone as user_handphone
from oe.customers oc

select * from oe.users